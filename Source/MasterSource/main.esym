D G "__PCM__" 0 566 ""4.065""
D G "__DEVICE__" 0 566 "877"
D G "__DATE__" 0 566 ""08-Out-08""
D G "__TIME__" 0 566 ""14:15:22"" "Standard Header file for the PIC16F877A device ////////////////"
d G "PIN_A0" 1 19 "40"
d G "PIN_A1" 1 20 "41"
d G "PIN_A2" 1 21 "42"
d G "PIN_A3" 1 22 "43"
d G "PIN_A4" 1 23 "44"
d G "PIN_A5" 1 24 "45"
d G "PIN_B0" 1 26 "48"
d G "PIN_B1" 1 27 "49"
d G "PIN_B2" 1 28 "50"
d G "PIN_B3" 1 29 "51"
d G "PIN_B4" 1 30 "52"
d G "PIN_B5" 1 31 "53"
d G "PIN_B6" 1 32 "54"
d G "PIN_B7" 1 33 "55"
d G "PIN_C0" 1 35 "56"
d G "PIN_C1" 1 36 "57"
d G "PIN_C2" 1 37 "58"
d G "PIN_C3" 1 38 "59"
d G "PIN_C4" 1 39 "60"
d G "PIN_C5" 1 40 "61"
d G "PIN_C6" 1 41 "62"
d G "PIN_C7" 1 42 "63"
d G "PIN_D0" 1 44 "64"
d G "PIN_D1" 1 45 "65"
d G "PIN_D2" 1 46 "66"
d G "PIN_D3" 1 47 "67"
d G "PIN_D4" 1 48 "68"
d G "PIN_D5" 1 49 "69"
d G "PIN_D6" 1 50 "70"
d G "PIN_D7" 1 51 "71"
d G "PIN_E0" 1 53 "72"
d G "PIN_E1" 1 54 "73"
d G "PIN_E2" 1 55 "74"
d G "FALSE" 1 58 "0"
d G "TRUE" 1 59 "1"
d G "BYTE" 1 61 "int8"
d G "BOOLEAN" 1 62 "int1"
d G "getc" 1 64 "getch"
d G "fgetc" 1 65 "getch"
d G "getchar" 1 66 "getch"
d G "putc" 1 67 "putchar"
d G "fputc" 1 68 "putchar"
d G "fgets" 1 69 "gets"
d G "fputs" 1 70 "puts"
d G "WDT_FROM_SLEEP" 1 75 "3"
d G "WDT_TIMEOUT" 1 76 "11"
d G "MCLR_FROM_SLEEP" 1 77 "19"
d G "MCLR_FROM_RUN" 1 78 "27"
d G "NORMAL_POWER_UP" 1 79 "25"
d G "BROWNOUT_RESTART" 1 80 "26"
d G "RTCC_INTERNAL" 1 88 "0"
d G "RTCC_EXT_L_TO_H" 1 89 "32"
d G "RTCC_EXT_H_TO_L" 1 90 "48"
d G "RTCC_DIV_1" 1 92 "8"
d G "RTCC_DIV_2" 1 93 "0"
d G "RTCC_DIV_4" 1 94 "1"
d G "RTCC_DIV_8" 1 95 "2"
d G "RTCC_DIV_16" 1 96 "3"
d G "RTCC_DIV_32" 1 97 "4"
d G "RTCC_DIV_64" 1 98 "5"
d G "RTCC_DIV_128" 1 99 "6"
d G "RTCC_DIV_256" 1 100 "7"
d G "RTCC_8_BIT" 1 103 "0"
d G "WDT_18MS" 1 115 "0x8008"
d G "WDT_36MS" 1 116 "9"
d G "WDT_72MS" 1 117 "10"
d G "WDT_144MS" 1 118 "11"
d G "WDT_288MS" 1 119 "12"
d G "WDT_576MS" 1 120 "13"
d G "WDT_1152MS" 1 121 "14"
d G "WDT_2304MS" 1 122 "15"
d G "T1_DISABLED" 1 128 "0"
d G "T1_INTERNAL" 1 129 "0x85"
d G "T1_EXTERNAL" 1 130 "0x87"
d G "T1_EXTERNAL_SYNC" 1 131 "0x83"
d G "T1_CLK_OUT" 1 133 "8"
d G "T1_DIV_BY_1" 1 135 "0"
d G "T1_DIV_BY_2" 1 136 "0x10"
d G "T1_DIV_BY_4" 1 137 "0x20"
d G "T1_DIV_BY_8" 1 138 "0x30"
d G "T2_DISABLED" 1 143 "0"
d G "T2_DIV_BY_1" 1 144 "4"
d G "T2_DIV_BY_4" 1 145 "5"
d G "T2_DIV_BY_16" 1 146 "6"
d G "CCP_OFF" 1 152 "0"
d G "CCP_CAPTURE_FE" 1 153 "4"
d G "CCP_CAPTURE_RE" 1 154 "5"
d G "CCP_CAPTURE_DIV_4" 1 155 "6"
d G "CCP_CAPTURE_DIV_16" 1 156 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 1 157 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 1 158 "9"
d G "CCP_COMPARE_INT" 1 159 "0xA"
d G "CCP_COMPARE_RESET_TIMER" 1 160 "0xB"
d G "CCP_PWM" 1 161 "0xC"
d G "CCP_PWM_PLUS_1" 1 162 "0x1c"
d G "CCP_PWM_PLUS_2" 1 163 "0x2c"
d G "CCP_PWM_PLUS_3" 1 164 "0x3c"
v G "CCP_1" 1 165 "int16"
v G "CCP_2" 1 169 "int16"
d G "PSP_ENABLED" 1 178 "0x10"
d G "PSP_DISABLED" 1 179 "0"
d G "SPI_MASTER" 1 186 "0x20"
d G "SPI_SLAVE" 1 187 "0x24"
d G "SPI_L_TO_H" 1 188 "0"
d G "SPI_H_TO_L" 1 189 "0x10"
d G "SPI_CLK_DIV_4" 1 190 "0"
d G "SPI_CLK_DIV_16" 1 191 "1"
d G "SPI_CLK_DIV_64" 1 192 "2"
d G "SPI_CLK_T2" 1 193 "3"
d G "SPI_SS_DISABLED" 1 194 "1"
d G "SPI_SAMPLE_AT_END" 1 196 "0x8000"
d G "SPI_XMIT_L_TO_H" 1 197 "0x4000"
d G "UART_ADDRESS" 1 203 "2"
d G "UART_DATA" 1 204 "4"
d G "A0_A3_A1_A3" 1 208 "0xfff04"
d G "A0_A3_A1_A2_OUT_ON_A4_A5" 1 209 "0xfcf03"
d G "A0_A3_A1_A3_OUT_ON_A4_A5" 1 210 "0xbcf05"
d G "NC_NC_NC_NC" 1 211 "0x0ff07"
d G "A0_A3_A1_A2" 1 212 "0xfff02"
d G "A0_A3_NC_NC_OUT_ON_A4" 1 213 "0x9ef01"
d G "A0_VR_A1_VR" 1 214 "0x3ff06"
d G "A3_VR_A2_VR" 1 215 "0xcff0e"
d G "CP1_INVERT" 1 216 "0x0000010"
d G "CP2_INVERT" 1 217 "0x0000020"
d G "VREF_LOW" 1 225 "0xa0"
d G "VREF_HIGH" 1 226 "0x80"
d G "VREF_A2" 1 228 "0x40"
d G "ADC_OFF" 1 236 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 1 237 "0x10000"
d G "ADC_CLOCK_DIV_4" 1 238 "0x4000"
d G "ADC_CLOCK_DIV_8" 1 239 "0x0040"
d G "ADC_CLOCK_DIV_16" 1 240 "0x4040"
d G "ADC_CLOCK_DIV_32" 1 241 "0x0080"
d G "ADC_CLOCK_DIV_64" 1 242 "0x4080"
d G "ADC_CLOCK_INTERNAL" 1 243 "0x00c0" "Internal 2-6us"
d G "NO_ANALOGS" 1 246 "7" "None"
d G "ALL_ANALOG" 1 247 "0" "A0 A1 A2 A3 A5 E0 E1 E2"
d G "AN0_AN1_AN2_AN4_AN5_AN6_AN7_VSS_VREF" 1 248 "1" "A0 A1 A2 A5 E0 E1 E2 VRefh=A3"
d G "AN0_AN1_AN2_AN3_AN4" 1 249 "2" "A0 A1 A2 A3 A5"
d G "AN0_AN1_AN2_AN4_VSS_VREF" 1 250 "3" "A0 A1 A2 A4 VRefh=A3"
d G "AN0_AN1_AN3" 1 251 "4" "A0 A1 A3"
d G "AN0_AN1_VSS_VREF" 1 252 "5" "A0 A1 VRefh=A3"
d G "AN0_AN1_AN4_AN5_AN6_AN7_VREF_VREF" 1 253 "0x08" "A0 A1 A5 E0 E1 E2 VRefh=A3 VRefl=A2"
d G "AN0_AN1_AN2_AN3_AN4_AN5" 1 254 "0x09" "A0 A1 A2 A3 A5 E0"
d G "AN0_AN1_AN2_AN4_AN5_VSS_VREF" 1 255 "0x0A" "A0 A1 A2 A5 E0 VRefh=A3"
d G "AN0_AN1_AN4_AN5_VREF_VREF" 1 256 "0x0B" "A0 A1 A5 E0 VRefh=A3 VRefl=A2"
d G "AN0_AN1_AN4_VREF_VREF" 1 257 "0x0C" "A0 A1 A4 VRefh=A3 VRefl=A2"
d G "AN0_AN1_VREF_VREF" 1 258 "0x0D" "A0 A1 VRefh=A3 VRefl=A2"
d G "AN0" 1 259 "0x0E" "A0"
d G "AN0_VREF_VREF" 1 260 "0x0F" "A0 VRefh=A3 VRefl=A2"
d G "ANALOG_RA3_REF" 1 261 "0x1" "!old only provided for compatibility"
d G "A_ANALOG" 1 262 "0x2" "!old only provided for compatibility"
d G "A_ANALOG_RA3_REF" 1 263 "0x3" "!old only provided for compatibility"
d G "RA0_RA1_RA3_ANALOG" 1 264 "0x4" "!old only provided for compatibility"
d G "RA0_RA1_ANALOG_RA3_REF" 1 265 "0x5" "!old only provided for compatibility"
d G "ANALOG_RA3_RA2_REF" 1 266 "0x8" "!old only provided for compatibility"
d G "ANALOG_NOT_RE1_RE2" 1 267 "0x9" "!old only provided for compatibility"
d G "ANALOG_NOT_RE1_RE2_REF_RA3" 1 268 "0xA" "!old only provided for compatibility"
d G "ANALOG_NOT_RE1_RE2_REF_RA3_RA2" 1 269 "0xB" "!old only provided for compatibility"
d G "A_ANALOG_RA3_RA2_REF" 1 270 "0xC" "!old only provided for compatibility"
d G "RA0_RA1_ANALOG_RA3_RA2_REF" 1 271 "0xD" "!old only provided for compatibility"
d G "RA0_ANALOG" 1 272 "0xE" "!old only provided for compatibility"
d G "RA0_ANALOG_RA3_RA2_REF" 1 273 "0xF" "!old only provided for compatibility"
d G "ADC_START_AND_READ" 1 277 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 1 278 "1"
d G "ADC_READ_ONLY" 1 279 "6"
d G "L_TO_H" 1 291 "0x40"
d G "H_TO_L" 1 292 "0"
d G "GLOBAL" 1 294 "0x0BC0"
d G "INT_RTCC" 1 295 "0x0B20"
d G "INT_RB" 1 296 "0xFF0B08"
d G "INT_EXT" 1 297 "0x0B10"
d G "INT_AD" 1 298 "0x8C40"
d G "INT_TBE" 1 299 "0x8C10"
d G "INT_RDA" 1 300 "0x8C20"
d G "INT_TIMER1" 1 301 "0x8C01"
d G "INT_TIMER2" 1 302 "0x8C02"
d G "INT_CCP1" 1 303 "0x8C04"
d G "INT_CCP2" 1 304 "0x8D01"
d G "INT_SSP" 1 305 "0x8C08"
d G "INT_PSP" 1 306 "0x8C80"
d G "INT_BUSCOL" 1 307 "0x8D08"
d G "INT_EEPROM" 1 308 "0x8D10"
d G "INT_TIMER0" 1 309 "0x0B20"
d G "INT_COMP" 1 310 "0x8D40"
D G "LCD_DB4" 2 8 "PIN_b4"
D G "LCD_DB5" 2 9 "PIN_b5"
D G "LCD_DB6" 2 10 "PIN_b6"
D G "LCD_DB7" 2 11 "PIN_b7"
D G "LCD_RS" 2 13 "PIN_b1"
D G "LCD_RW" 2 14 "PIN_b2"
D G "LCD_E" 2 15 "PIN_b0"
D G "USE_RW_PIN" 2 39 "1"
D G "LCD_LINE_1_ADDRESS" 2 43 "0x00"
D G "LCD_LINE_2_ADDRESS" 2 44 "0x40"
D G "LCD_LINE_3_ADDRESS" 2 45 "0x14"
D G "LCD_LINE_4_ADDRESS" 2 46 "0x54"
D G "lcd_type" 2 60 "2" "0=5x7, 1=5x10, 2=2 lines(or more)"
V G "lcd_line" 2 62 "int8"
V G "LCD_INIT_STRING" 2 64 "int8[4]"
V L "nibble" 2 74 "int8"
F G "lcd_send_nibble" 2 75 "void(int8 nibble)" "Note:  !! converts an integer expression"
C L "lcd_send_nibble" 2 1 1 "FUNCTION"
C L "lcd_read_nibble" 2 1 4 "FUNCTION"
F G "lcd_read_nibble" 2 97 "int8()"
V L "retval" 2 98 "int8" "Create bit variables so that we can easily set"
C L "lcd_read_nibble" 2 1 1 "FUNCTION"
C L "lcd_read_byte" 2 1 1 "FUNCTION"
F G "lcd_read_byte" 2 128 "int8()"
V L "low" 2 129 "int8"
V L "high" 2 130 "int8"
C L "lcd_send_byte" 2 1 1 "FUNCTION"
V L "address" 2 145 "int8"
V L "n" 2 145 "int8"
F G "lcd_send_byte" 2 146 "void(int8 address,int8 n)"
F G "lcd_init" 2 175 "void()"
V L "i" 2 176 "int8"
C L "lcd_init" 2 1 4 "FUNCTION"
C L "lcd_init" 2 1 6 "FUNCTION"
V L "x" 2 221 "int8"
V L "y" 2 221 "int8"
F G "lcd_gotoxy" 2 222 "void(int8 x,int8 y)"
V L "address" 2 223 "int8"
V L "c" 2 255 "int8"
F G "lcd_putc" 2 256 "void(int8 c)"
V L "x" 2 281 "int8"
V L "y" 2 281 "int8"
F G "lcd_getc" 2 282 "int8(int8 x,int8 y)"
V L "value" 2 283 "int8"
C L "lcd_getc" 2 1 1 "FUNCTION"
D G "_STDIO" 3 12 ""
D G "_STRING" 4 12 ""
D G "_STDDEF" 5 13 ""
D G "ptrdiff_t" 5 18 "unsigned int16"
D G "size_t" 5 21 "unsigned int8"
D G "wchar_t" 5 22 "char"
D G "NULL" 5 23 "0"
D G "offsetof" 5 25 "(s,f) (offsetofbit(s,f)/8)"
D G "_CTYPE" 6 12 ""
D G "islower" 6 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 6 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 6 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 6 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 6 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 6 19 "(x)  ((x)==' ')"
D G "isxdigit" 6 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 6 21 "(x)  ((x)<' ')"
D G "isprint" 6 22 "(x)  ((x)>=' ')"
D G "isgraph" 6 23 "(x)  ((x)>' ')"
D G "ispunct" 6 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "memmove" 4 19 10 "FUNCTION"
V L "s1" 4 34 "*int8"
V L "s2" 4 34 "*int8"
V L "n" 4 34 "int8"
F G "memmove" 4 35 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "sc1" 4 36 "*int8"
V L "sc2" 4 37 "*int8"
C L "strcopy" 4 19 3 "FUNCTION"
V L "s1" 4 53 "*int8"
V L "s2" 4 53 "*int8"
F G "strcopy" 4 54 "*int8(*int8 s1,*int8 s2)"
V L "s" 4 55 "*int8"
C L "strncpy" 4 19 4 "FUNCTION"
V L "s1" 4 69 "*int8"
V L "s2" 4 69 "*int8"
V L "n" 4 69 "int8"
F G "strncpy" 4 70 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 4 71 "*int8"
C L "strcat" 4 19 3 "FUNCTION"
V L "s1" 4 86 "*int8"
V L "s2" 4 86 "*int8"
F G "strcat" 4 87 "*int8(*int8 s1,*int8 s2)"
V L "s" 4 88 "*int8"
C L "strncat" 4 19 2 "FUNCTION"
V L "s1" 4 104 "*int8"
V L "s2" 4 104 "*int8"
V L "n" 4 104 "int8"
F G "strncat" 4 105 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 4 106 "*int8"
C L "memcmp" 4 19 3 "FUNCTION"
V L "s1" 4 128 "*int8"
V L "s2" 4 128 "*int8"
V L "n" 4 128 "int8"
F G "memcmp" 4 129 "sint8(*int8 s1,*int8 s2,int8 n)"
V L "su1" 4 130 "*int8"
V L "su2" 4 130 "*int8"
C L "strcmp" 4 19 2 "FUNCTION"
V L "s1" 4 142 "*int8"
V L "s2" 4 142 "*int8"
F G "strcmp" 4 143 "sint8(*int8 s1,*int8 s2)"
C L "strcoll" 4 19 2 "FUNCTION"
V L "s1" 4 152 "*int8"
V L "s2" 4 152 "*int8"
F G "strcoll" 4 153 "sint8(*int8 s1,*int8 s2)"
C L "strncmp" 4 19 4 "FUNCTION"
V L "s1" 4 165 "*int8"
V L "s2" 4 165 "*int8"
V L "n" 4 165 "int8"
F G "strncmp" 4 166 "sint8(*int8 s1,*int8 s2,int8 n)"
C L "strxfrm" 4 19 3 "FUNCTION"
V L "s1" 4 177 "*int8"
V L "s2" 4 177 "*int8"
V L "n" 4 177 "int8"
F G "strxfrm" 4 178 "int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 4 179 "*int8"
V L "n1" 4 180 "int8"
C L "memchr" 4 19 3 "FUNCTION"
V L "s" 4 199 "*int8"
V L "c" 4 199 "int8"
V L "n" 4 199 "int8"
F G "memchr" 4 200 "*int8(*int8 s,int8 c,int8 n)"
V L "uc" 4 201 "int8"
V L "su" 4 202 "*int8"
C L "strchr" 4 19 2 "FUNCTION"
V L "s" 4 213 "*int8"
V L "c" 4 213 "int8"
F G "strchr" 4 214 "*int8(*int8 s,int8 c)"
V L "s1" 4 225 "*int8"
V L "s2" 4 225 "*int8"
F G "strcspn" 4 226 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 4 227 "*int8"
V L "sc2" 4 227 "*int8"
C L "strpbrk" 4 19 4 "FUNCTION"
V L "s1" 4 240 "*int8"
V L "s2" 4 240 "*int8"
F G "strpbrk" 4 241 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 4 242 "*int8"
V L "sc2" 4 242 "*int8"
C L "strrchr" 4 19 2 "FUNCTION"
V L "s" 4 255 "*int8"
V L "c" 4 255 "int8"
F G "strrchr" 4 256 "*int8(*int8 s,int8 c)"
V L "p" 4 257 "*int8"
V L "s1" 4 270 "*int8"
V L "s2" 4 270 "*int8"
F G "strspn" 4 271 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 4 272 "*int8"
V L "sc2" 4 272 "*int8"
C L "strstr" 4 19 6 "FUNCTION"
V L "s1" 4 289 "*int8"
V L "s2" 4 289 "*int8"
F G "strstr" 4 290 "*int8(*int8 s1,*int8 s2)"
V L "s" 4 291 "*int8"
V L "t" 4 291 "*int8"
C L "strtok" 4 19 13 "FUNCTION"
V L "s1" 4 328 "*int8"
V L "s2" 4 328 "*int8"
F G "strtok" 4 329 "*int8(*int8 s1,*int8 s2)"
V L "beg" 4 330 "*int8"
V L "end" 4 330 "*int8"
V L "save" 4 331 "*int8"
V L "s" 4 377 "*int8"
F G "strlen" 4 378 "*int8(*int8 s)"
V L "sc" 4 379 "*int8"
C L "stricmp" 4 19 2 "FUNCTION"
V L "s1" 4 388 "*int8"
V L "s2" 4 388 "*int8"
F G "stricmp" 4 389 "sint8(*int8 s1,*int8 s2)"
C L "strlwr" 4 19 3 "FUNCTION"
V L "s" 4 402 "*int8"
F G "strlwr" 4 403 "*int8(*int8 s)"
V L "p" 4 404 "*int8"
D G "_STDLIB" 7 12 ""
D G "RAND_MAX" 7 19 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 7 25 "1"
T G "div_t" 7 33 "{sint8 quot,sint8 rem}"
T G "ldiv_t" 7 38 "{sint16 quot,sint16 rem}" "(C) Copyright 1996,2003 Custom Computer Services           ////"
C L "atof" 5 3 6 "FUNCTION"
C L "atof" 7 43 2 "FUNCTION"
C L "atof" 7 46 1 "*"
C L "atof" 7 46 1 "*"
V L "s" 7 50 "*int8"
F G "atof" 7 50 "float(*int8 s)" "Standard template: float32 atoe(char * s)"
C L "atof" 7 76 1 "*"
C L "atof" 7 76 1 "*"
C L "atof" 7 76 1 "*"
V L "s" 7 82 "*int8"
F G "atoe" 7 82 "float(*int8 s)" "Standard template: signed int  atoi(char * s)"
C L "atoe" 7 89 1 "*"
C L "atoe" 7 89 1 "*"
V L "s" 7 93 "*int8"
F G "atoi" 7 93 "sint8(*int8 s)" "Syntax: signed int32  atoi32(char * s)"
V L "s" 7 101 "*int8"
F G "atoi32" 7 101 "sint32(*int8 s)" "Syntax: char *  itoa(signed int32 num, int8 base, char * s)"
C L "atoi32" 7 89 2 "FUNCTION"
V L "num" 7 122 "sint32"
V L "base" 7 122 "int8"
V L "s" 7 122 "*int8"
F G "itoa" 7 122 "*int8(sint32 num,int8 base,*int8 s)" "Standard template: signed int16  atol(char * s)"
C L "itoa" 7 124 1 "*"
C L "itoa" 7 124 1 "*"
V L "s" 7 128 "*int8"
F G "atol" 7 128 "sint16(*int8 s)" "Standard template: float32 strtod(char * s,char *endptr)"
C L "atol" 7 130 1 "*"
C L "atol" 7 130 1 "*"
C L "atol" 7 130 3 "*"
V L "s" 7 138 "*int8"
V L "endptr" 7 138 "*int8"
F G "strtod" 7 138 "float(*int8 s,*int8 endptr)" "Standart template: float32 strto(char * s,char *endptr)"
C L "strtod" 7 130 2 "FUNCTION"
C L "strtod" 7 141 1 "*"
C L "strtod" 7 141 1 "*"
C L "strtod" 7 141 2 "*"
C L "strtod" 7 154 1 "*"
C L "strtod" 7 154 1 "*"
C L "strtod" 7 154 1 "*"
C L "strtod" 7 154 1 "*"
V L "s" 7 160 "*int8"
V L "endptr" 7 160 "*int8"
V L "base" 7 160 "sint8"
F G "strtol" 7 160 "sint16(*int8 s,*int8 endptr,sint8 base)" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 7 162 1 "*"
C L "strtol" 7 162 1 "*"
C L "strtol" 7 162 1 "*"
C L "strtol" 7 162 1 "*"
V L "s" 7 168 "*int8"
V L "endptr" 7 168 "*int8"
V L "base" 7 168 "sint8"
F G "strtoul" 7 168 "int16(*int8 s,*int8 endptr,sint8 base)" "Pseudo-random sequence generation functions"
C L "strtoul" 7 162 1 "FUNCTION"
C L "strtoul" 7 174 1 "*"
C L "strtoul" 7 174 1 "*"
C L "strtoul" 7 174 1 "*"
C L "strtoul" 7 174 1 "*"
C L "strtoul" 7 174 1 "*"
F G "rand" 7 183 "int16()" "The srand function uses the argument as a seed for a new sequence of"
C L "rand" 7 185 1 "*"
C L "rand" 7 185 1 "*"
C L "rand" 7 185 1 "*"
C L "rand" 7 185 1 "*"
C L "rand" 7 185 1 "*"
C L "rand" 7 185 1 "*"
C L "rand" 7 185 1 "*"
C L "rand" 7 185 1 "*"
C L "rand" 7 185 1 "*"
C L "rand" 7 185 1 "*"
C L "rand" 7 185 1 "*"
C L "rand" 7 185 1 "*"
C L "rand" 7 185 1 "*"
C L "rand" 7 185 1 "*"
C L "rand" 7 185 1 "*"
V L "seed" 7 205 "int32"
F G "srand" 7 205 "void(int32 seed)" "Memory management functions"
C L "srand" 7 185 3 "FUNCTION"
V L "string" 7 219 "*int8"
F G "system" 7 219 "sint8(*int8 string)" "Searching and sorting utilities"
C L "system" 7 185 1 "FUNCTION"
C L "system" 7 225 1 "*"
C L "system" 7 225 1 "*"
C L "system" 7 225 1 "*"
C L "system" 7 225 1 "*"
C L "system" 7 225 1 "*"
C L "system" 7 225 1 "*"
C L "system" 7 225 1 "*"
C L "system" 7 225 1 "*"
C L "system" 7 225 1 "*"
C L "system" 7 225 1 "*"
C L "system" 7 225 4 "*"
C L "system" 7 243 1 "*"
C L "system" 7 243 1 "*"
C L "system" 7 243 1 "*"
C L "system" 7 243 1 "*"
C L "system" 7 243 1 "*"
C L "system" 7 243 1 "*"
C L "system" 7 243 1 "*"
C L "system" 7 243 1 "*"
D G "labs" 7 263 "abs"
V L "numer" 7 265 "sint8"
V L "denom" 7 265 "sint8"
F G "div" 7 265 "div_t(sint8 numer,sint8 denom)"
V L "numer" 7 266 "sint16"
V L "denom" 7 266 "sint16"
F G "ldiv" 7 266 "ldiv_t(sint16 numer,sint16 denom)" "Multibyte character functions"
C L "ldiv" 7 243 4 "FUNCTION"
C L "ldiv" 5 2 7 "FUNCTION"
C L "ldiv" 4 2 7 "FUNCTION"
V L "numer" 7 288 "sint8"
V L "denom" 7 288 "sint8"
F G "div" 7 289 "div_t(sint8 numer,sint8 denom)"
V L "val" 7 290 "div_t"
V L "numer" 7 296 "sint16"
V L "denom" 7 296 "sint16"
F G "ldiv" 7 297 "ldiv_t(sint16 numer,sint16 denom)"
V L "val" 7 298 "ldiv_t"
V L "s" 7 305 "*int8"
F G "atof" 7 306 "float(*int8 s)"
V L "pow10" 7 307 "float"
V L "result" 7 308 "float"
V L "sign" 7 309 "int8"
V L "c" 7 310 "int8"
V L "ptr" 7 311 "int8"
V L "s" 7 536 "*int8"
F G "atoe" 7 537 "float(*int8 s)"
V L "pow10" 7 538 "float"
V L "result" 7 539 "float"
V L "sign" 7 540 "int8"
V L "expsign" 7 541 "int8"
V L "c" 7 542 "int8"
V L "ptr" 7 543 "int8"
V L "i" 7 544 "int8"
V L "exp" 7 545 "float"
V L "expcnt" 7 546 "int8"
C L "atoe" 7 572 1 "FUNCTION"
V L "s" 7 604 "*int8"
F G "atoi" 7 605 "sint8(*int8 s)"
V L "result" 7 606 "sint8"
V L "sign" 7 607 "int8"
V L "base" 7 607 "int8"
V L "index" 7 607 "int8"
V L "c" 7 608 "int8"
C L "atoi" 7 572 1 "FUNCTION"
C L "atoi" 7 572 1 "FUNCTION"
C L "atoi" 7 572 1 "FUNCTION"
C L "atoi" 7 572 1 "FUNCTION"
C L "atoi" 7 572 1 "FUNCTION"
C L "atoi" 7 572 1 "FUNCTION"
V L "s" 7 673 "*int8"
F G "atol" 7 674 "sint16(*int8 s)"
V L "result" 7 675 "sint16"
V L "sign" 7 676 "int8"
V L "base" 7 676 "int8"
V L "index" 7 676 "int8"
V L "c" 7 677 "int8"
C L "atol" 7 572 1 "FUNCTION"
C L "atol" 7 572 1 "FUNCTION"
C L "atol" 7 572 1 "FUNCTION"
C L "atol" 7 572 1 "FUNCTION"
C L "mult_with10" 7 572 1 "FUNCTION"
V L "num" 7 740 "int32"
F G "mult_with10" 7 741 "sint32(int32 num)"
V L "s" 7 746 "*int8"
F G "atoi32" 7 747 "sint32(*int8 s)"
V L "result" 7 748 "sint32"
V L "sign" 7 749 "int8"
V L "base" 7 749 "int8"
V L "index" 7 749 "int8"
V L "c" 7 750 "int8"
C L "atoi32" 7 572 1 "FUNCTION"
C L "atoi32" 7 572 1 "FUNCTION"
C L "atoi32" 7 572 1 "FUNCTION"
C L "atoi32" 7 572 1 "FUNCTION"
C L "atoi32" 7 572 1 "FUNCTION"
V L "num" 7 945 "sint32"
V L "base" 7 945 "int8"
V L "s" 7 945 "*int8"
F G "itoa" 7 946 "*int8(sint32 num,int8 base,*int8 s)"
V L "temp" 7 947 "int32"
V L "i" 7 948 "int8"
V L "sign" 7 948 "int8"
V L "cnt" 7 948 "int8"
V L "c" 7 949 "int8"
C L "itoa" 7 572 1 "FUNCTION"
C L "itoa" 7 572 1 "FUNCTION"
C L "itoa" 7 572 1 "FUNCTION"
C L "itoa" 7 572 1 "FUNCTION"
C L "itoa" 7 572 1 "FUNCTION"
V L "s" 7 983 "*int8"
V L "endptr" 7 983 "*int8"
F G "strtod" 7 983 "float(*int8 s,*int8 endptr)"
V L "pow10" 7 984 "float"
V L "result" 7 985 "float"
V L "sign" 7 986 "int8"
V L "point" 7 986 "int8"
V L "c" 7 987 "int8"
V L "ptr" 7 988 "int8"
V L "s" 7 1245 "*int8"
V L "endptr" 7 1245 "*int8"
V L "base" 7 1245 "sint8"
F G "strtoul" 7 1246 "int16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 7 1247 "*int8"
V L "s1" 7 1247 "*int8"
V L "sd" 7 1247 "*int8"
V L "x" 7 1248 "int16"
V L "sign" 7 1249 "int8"
V L "digits" 7 1250 "int8[1]"
C L "strtoul" 7 572 1 "FUNCTION"
C L "strtoul" 7 572 1 "FUNCTION"
C L "strtoul" 7 572 1 "FUNCTION"
V L "s" 7 1307 "*int8"
V L "endptr" 7 1307 "*int8"
V L "base" 7 1307 "sint8"
F G "strtol" 7 1308 "sint16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 7 1309 "*int8"
V L "s1" 7 1309 "*int8"
V L "sd" 7 1309 "*int8"
V L "x" 7 1310 "sint16"
V L "sign" 7 1311 "int8"
V L "digits" 7 1312 "int8[1]"
C L "strtol" 7 572 1 "FUNCTION"
C L "strtol" 7 572 1 "FUNCTION"
C L "strtol" 7 572 1 "FUNCTION"
V L "string" 7 1370 "*int8"
F G "system" 7 1371 "sint8(*int8 string)"
V L "s" 7 1375 "*int8"
V L "n" 7 1375 "int8"
F G "mblen" 7 1376 "int8(*int8 s,int8 n)"
V L "pwc" 7 1380 "*int8"
V L "s" 7 1380 "*int8"
V L "n" 7 1380 "int8"
F G "mbtowc" 7 1381 "int8(*int8 pwc,*int8 s,int8 n)"
V L "s" 7 1386 "*int8"
V L "wchar" 7 1386 "int8"
F G "wctomb" 7 1387 "int8(*int8 s,int8 wchar)"
V L "pwcs" 7 1392 "*int8"
V L "s" 7 1392 "*int8"
V L "n" 7 1392 "int8"
F G "mbstowcs" 7 1393 "int8(*int8 pwcs,*int8 s,int8 n)"
V L "s" 7 1398 "*int8"
V L "pwcs" 7 1398 "*int8"
V L "n" 7 1398 "int8"
F G "wcstombs" 7 1399 "int8(*int8 s,*int8 pwcs,int8 n)"
V G "_Randseed" 7 1408 "int32"
F G "rand" 7 1411 "int16()"
V L "seed" 7 1416 "int32"
F G "srand" 7 1417 "void(int32 seed)"
V L "p1" 7 1426 "*int8"
V L "p2" 7 1426 "*int8"
T G "*_Cmpfun" 7 1426 "sint8(*int8 p1,*int8 p2)"
V L "qdata" 7 1433 "*int8"
V L "qitems" 7 1433 "int8"
V L "qsize" 7 1433 "int8"
V L "cmp" 7 1433 "_Cmpfun"
F G "qsort" 7 1433 "void(*int8 qdata,int8 qitems,int8 qsize,_Cmpfun cmp)"
V L "m" 7 1434 "int8"
V L "j" 7 1434 "int8"
V L "i" 7 1434 "int8"
V L "l" 7 1434 "int8"
V L "done" 7 1435 "int1"
V L "t" 7 1436 "int8[16]"
V L "key" 7 1461 "*int8"
V L "base" 7 1461 "*int8"
V L "num" 7 1461 "int8"
V L "width" 7 1461 "int8"
V L "cmp" 7 1461 "_Cmpfun"
F G "bsearch" 7 1462 "*int8(*int8 key,*int8 base,int8 num,int8 width,_Cmpfun cmp)"
V L "p" 7 1463 "*int8"
V L "q" 7 1463 "*int8"
V L "n" 7 1464 "int8"
V L "pivot" 7 1465 "int8"
V L "val" 7 1466 "sint8"
C L "bsearch" 7 572 1 "FUNCTION"
D G "led_rs_on" 0 14 "output_low(PIN_D0)" "Indicador Actividade Uart"
D G "led_rs_off" 0 15 "output_high(PIN_D0)"
D G "led_spp_on" 0 17 "output_low(PIN_D1)" "Indicador Actividade I2c"
D G "led_spp_off" 0 18 "output_high(PIN_D1)"
D G "lenbuff" 0 22 "5" "Comprimento Buffer Rs - Alterar tamanho se necessario"
V G "buffer_adc" 0 26 "int8[6]"
V G "buffer_cpu" 0 27 "int8[6]"
V G "buffer_mano" 0 28 "int8[6]"
V G "rs_buffer" 0 31 "int8[5]" "Buffer Uart"
V G "x" 0 32 "int8"
V G "y" 0 33 "int8"
V G "canal" 0 34 "int8"
V G "index" 0 35 "int8"
V G "flag_request" 0 36 "int8"
C L "escreve_spp_mano" 0 13 2 "FUNCTION"
F G "escreve_spp_mano" 0 39 "void()"
F G "escreve_spp_cpu" 0 40 "void()"
F G "ler_spp" 0 41 "void()"
F G "inicbuff" 0 42 "void()"
F G "chose_arm" 0 43 "void()"
F G "ini" 0 44 "void()"
F G "analog_config" 0 45 "void()"
F G "serial_isr" 0 46 "void()"
F G "show_mano" 0 47 "void()"
F G "show_cpu" 0 48 "void()"
F G "show_adc" 0 49 "void()"
F G "select_cpu" 0 50 "void()"
V L "cu" 0 51 "int8"
F G "send_cpu" 0 51 "void(int8 cu)"
C L "inicbuff" 0 13 1 "FUNCTION"
F G "inicbuff" 0 54 "void()"
V L "i" 0 55 "int8"
C L "inicbuff" 0 13 1 "FUNCTION"
C L "inicbuff" 0 13 1 "FUNCTION"
C L "inicbuff" 0 13 1 "FUNCTION"
F G "escreve_spp_mano" 0 65 "void()"
F G "escreve_spp_cpu" 0 110 "void()"
F G "ler_spp" 0 155 "void()"
C L "serial_isr" 0 13 1 "FUNCTION"
C L "serial_isr" 0 13 1 "FUNCTION"
F G "serial_isr" 0 202 "void()"
V L "c" 0 203 "int8"
C L "serial_isr" 0 13 1 "FUNCTION"
C L "serial_isr" 0 13 1 "FUNCTION"
C L "serial_isr" 0 13 1 "FUNCTION"
C L "serial_isr" 0 13 1 "FUNCTION"
C L "serial_isr" 0 13 1 "FUNCTION"
C L "serial_isr" 0 13 1 "FUNCTION"
F G "chose_arm" 0 221 "void()"
C L "chose_arm" 0 13 1 "FUNCTION"
C L "chose_arm" 0 13 1 "FUNCTION"
C L "chose_arm" 0 13 1 "FUNCTION"
C L "chose_arm" 0 13 1 "FUNCTION"
C L "chose_arm" 0 13 1 "FUNCTION"
C L "chose_arm" 0 13 1 "FUNCTION"
F G "ini" 0 294 "void()"
C L "analog_config" 0 13 1 "FUNCTION"
F G "analog_config" 0 322 "void()"
F G "set_channel" 0 340 "void()"
F G "read_valor" 0 370 "void()"
F G "show_mano" 0 379 "void()"
C L "show_mano" 0 13 1 "FUNCTION"
F G "show_cpu" 0 394 "void()"
C L "show_cpu" 0 13 1 "FUNCTION"
F G "show_adc" 0 409 "void()"
C L "show_adc" 0 13 1 "FUNCTION"
F G "select_cpu" 0 423 "void()"
V L "cu" 0 448 "int8"
F G "send_cpu" 0 449 "void(int8 cu)"
F G "MAIN" 0 456 "void()"
V L "modo" 0 457 "int1"
V L "tempo" 0 458 "int16"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "strcpy" 2 0
F B "memset" 3 0
F B "memcpy" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 4 0
F B "write_program_memory8" 4 0
F B "read_program_memory" 4 0
F B "read_program_memory8" 4 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 0
F B "setup_adc_ports" 1 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_ccp1" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_vref" 1 0
F B "setup_psp" 1 0
F B "psp_output_full" 0 0
F B "psp_input_full" 0 0
F B "psp_overflow" 0 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "i2c_read" 0 2
F B "i2c_write" 1 2
F B "i2c_start" 0 2
F B "i2c_stop" 0 1
F B "i2c_isr_state" 0 1
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 3
F B "setup_uart" 1 3
